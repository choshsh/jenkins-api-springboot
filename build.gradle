plugins {
    id 'org.springframework.boot' version '3.0.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'com.google.cloud.tools.jib' version '3.3.1'
}

group = 'com.choshsh'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    jcenter()
}

// 이미지 태그 설정
def imageTags = []
if (project.hasProperty("tag")) imageTags.add(project.getProperty("tag"))

jib {
    from {
        image = "amazoncorretto:8"
    }
    to {
        image = "choshsh/jenkins-api-springboot"
        tags = imageTags
    }
    container {
        creationTime = "USE_CURRENT_TIMESTAMP"
        jvmFlags = ['-Dspring.profiles.active=prod', '-XX:+UseContainerSupport', '-Dserver.port=8080', '-Dfile.encoding=UTF-8']
        ports = ['8080']
        labels = [maintainer: 'choshsh <cho911115@gmail.com>']
        user = "1000:1000"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'com.cdancy:jenkins-rest:0.0.29'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.micrometer:micrometer-registry-prometheus:1.10.3'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

bootRun {
    String activeProfile = System.properties['spring.profiles.active']
    systemProperty "spring.profiles.active", activeProfile
}


javadoc { source = sourceSets.main.java.srcDirs options.encoding = 'UTF-8' }